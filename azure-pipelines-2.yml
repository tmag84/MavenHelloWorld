trigger:
- master

pool: AzureDemoServer

steps:

# -----------------------------
# 0. Install Chrome + ChromeDriver (NEW STEP)
# -----------------------------
- script: |
    echo "Installing latest Chrome and ChromeDriver..."

    sudo apt-get update -y
    sudo apt-get install -y wget curl unzip gnupg2 jq

    # Install Google Chrome Stable
    wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
    echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
    sudo apt-get update -y
    sudo apt-get install -y google-chrome-stable

    # Get Chrome version
    CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
    echo "Installed Chrome version: $CHROME_VERSION"

    # Get matching ChromeDriver
    DRIVER_URL=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json" \
      | jq -r --arg ver "$CHROME_VERSION" '.channels.Stable.downloads.chromedriver[] | select(.platform == "linux64") | .url')

    echo "Downloading ChromeDriver from: $DRIVER_URL"
    wget "$DRIVER_URL" -O chromedriver.zip
    unzip chromedriver.zip
    sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
    sudo chmod +x /usr/local/bin/chromedriver

    echo "Installed ChromeDriver version:"
    chromedriver --version
  displayName: 'Install Chrome + ChromeDriver'

# -----------------------------
# 1. Build with Maven
# -----------------------------
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'clean install'

# -----------------------------
# 2. Copy .war to staging
# -----------------------------
- task: CopyFiles@2
  inputs:
    Contents: '**/*.war'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

# -----------------------------
# 3. Publish build artifact
# -----------------------------
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'warfile'
    publishLocation: 'Container'

# -----------------------------
# 4. Docker login
# -----------------------------
- task: Docker@2
  inputs:
    containerRegistry: 'DockerHubCon'
    command: 'login'

# -----------------------------
# 5. Build & Push Docker image
# -----------------------------
- task: Docker@2
  inputs:
    containerRegistry: 'DockerHubCon'
    repository: 'tmag84/demoazuredevops'
    command: 'buildAndPush'
    Dockerfile: '**/AzureDockerfile'

# -----------------------------
# 6. Download artifact before deploy
# -----------------------------
- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'warfile'
    downloadPath: '$(System.ArtifactsDirectory)'

# -----------------------------
# 7. Deploy to Azure App Service
# -----------------------------
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'FreeAzureConn'
    appName: 'AzureDemoApp'
    package: '$(System.ArtifactsDirectory)/warfile/**/*.war'
